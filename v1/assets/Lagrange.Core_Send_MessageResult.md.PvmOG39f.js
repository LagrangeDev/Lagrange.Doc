import{_ as e,c as t,o as s,aj as a}from"./chunks/framework.rttrbDsz.js";const h=JSON.parse('{"title":"发送消息结果 MessageResult","description":"","frontmatter":{},"headers":[],"relativePath":"Lagrange.Core/Send/MessageResult.md","filePath":"Lagrange.Core/Send/MessageResult.md","lastUpdated":1747402156000}'),n={name:"Lagrange.Core/Send/MessageResult.md"},l=a('<h1 id="发送消息结果-messageresult" tabindex="-1">发送消息结果 MessageResult <a class="header-anchor" href="#发送消息结果-messageresult" aria-label="Permalink to &quot;发送消息结果 MessageResult&quot;">​</a></h1><p>MessageResult 为发送消息后异步返回的结果</p><table tabindex="0"><thead><tr><th style="text-align:center;">字段</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Result</code></td><td style="text-align:center;">uint</td><td style="text-align:center;">N/A</td></tr><tr><td style="text-align:center;"><code>Timestamp</code></td><td style="text-align:center;">uint</td><td style="text-align:center;">Unix 时间戳</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">额外</p><p>Sequence 被封装为了 internel, 回复消息实际上只需要一个 seq, 需要回复自己的消息方法之一是监听消息事件对自己处理,或者考虑特殊用法使用 Seq 回复自己的消息</p></div>',4),r=[l];function d(c,o,i,_,g,u){return s(),t("div",null,r)}const m=e(n,[["render",d]]);export{h as __pageData,m as default};
