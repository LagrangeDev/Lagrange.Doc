import{_ as a,c as e,o as t,aj as r}from"./chunks/framework.DJyex2_T.js";const m=JSON.parse('{"title":"Lagrange.Milky","description":"","frontmatter":{},"headers":[],"relativePath":"Lagrange.Milky/index.md","filePath":"Lagrange.Milky/index.md","lastUpdated":1748532627000}'),i={name:"Lagrange.Milky/index.md"},l=r('<h1 id="lagrange-milky" tabindex="-1">Lagrange.Milky <a class="header-anchor" href="#lagrange-milky" aria-label="Permalink to &quot;Lagrange.Milky&quot;">​</a></h1><p>Milky协议实现, 支持与主流Bot框架通信。</p><h2 id="获取方式" tabindex="-1">获取方式 <a class="header-anchor" href="#获取方式" aria-label="Permalink to &quot;获取方式&quot;">​</a></h2><ol><li><a href="https://github.com/LagrangeDev/LagrangeV2/actions/workflows/milky-build.yaml" target="_blank" rel="noreferrer">Actions</a></li></ol><div class="tip custom-block"><p class="custom-block-title">提示</p><p>AOT Publish 无需 .NET 运行时支持, 可直接运行。</p><p>仅支持64位架构的win, linux, mac, 如需运行时支持其他架构, 请自行编译并使用JIT。</p></div><h2 id="部署-配置" tabindex="-1">部署 &amp; 配置 <a class="header-anchor" href="#部署-配置" aria-label="Permalink to &quot;部署 &amp; 配置&quot;">​</a></h2><p><a href="/Lagrange.Doc/v2/Lagrange.Milky/Config/">快速部署 &amp; 配置</a></p>',7),n=[l];function o(s,c,d,g,_,p){return t(),e("div",null,n)}const k=a(i,[["render",o]]);export{m as __pageData,k as default};
