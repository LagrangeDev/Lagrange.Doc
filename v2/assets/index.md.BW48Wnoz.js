import{_ as e,c as a,o as t,aj as r}from"./chunks/framework.DJyex2_T.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Lagrange.Doc","tagline":"Lagrange V2 使用手册","actions":[{"text":"使用 Core","link":"./Lagrange.Core/index"},{"text":"使用 Native API","link":"./Lagrange.NativeAPI/index"}]}},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1749054197000}'),o={name:"index.md"},n=r('<p>Lagrange.Core 是一个开源的 NTQQ 协议实现，免责声明详见项目主页。</p><h3 id="已经是一名熟练的-c-dev-了" tabindex="-1">&quot;已经是一名熟练的 C# Dev 了？&quot; <a class="header-anchor" href="#已经是一名熟练的-c-dev-了" aria-label="Permalink to &quot;&quot;已经是一名熟练的 C# Dev 了？&quot;&quot;">​</a></h3><p>前往 <a href="./Lagrange.Core/">Lagrange.Core</a> 查看 API 文档</p><h3 id="希望内置到你喜欢的语言" tabindex="-1">&quot;希望内置到你喜欢的语言？&quot; <a class="header-anchor" href="#希望内置到你喜欢的语言" aria-label="Permalink to &quot;&quot;希望内置到你喜欢的语言？&quot;&quot;">​</a></h3><p>前往 <a href="./Lagrange.Core.NativeAPI/">Lagrange.Core.NativeAPI</a> 查看如何通过 C ABI 调用 Lagrange.Core，提供 64 位的本机 DLL 和 SO，支持 C、C++、Go、Python、Rust 等语言</p><h3 id="等等-lagrange-onebot-去哪里了" tabindex="-1">&quot;……等等，Lagrange.OneBot 去哪里了？&quot; <a class="header-anchor" href="#等等-lagrange-onebot-去哪里了" aria-label="Permalink to &quot;&quot;……等等，Lagrange.OneBot 去哪里了？&quot;&quot;">​</a></h3><p>由于 OneBot 11 协议的<a href="https://milky.ntqqrev.org/guide/introduction.html" target="_blank" rel="noreferrer">各种历史遗留问题</a>，我们最终决定，LagrangeV2 不再支持 OneBot 11 协议，V1 的 OneBot 11 协议实现也一并不再维护。</p><p>你可以使用以上方法或改用的 <a href="https://lagrangedev.github.io/Lagrange.Milky.Document" target="_blank" rel="noreferrer">Lagrange.Milky</a>, Lagrange.Milky 是基于 LagrangeV2 的 <a href="https://milky.ntqqrev.org" target="_blank" rel="noreferrer">Milky</a> 协议实现</p>',8),i=[n];function g(l,d,h,s,c,_){return t(),a("div",null,i)}const q=e(o,[["render",g]]);export{p as __pageData,q as default};
